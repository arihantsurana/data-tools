import csv
import gzip
import os
from unittest import TestCase

import requests_mock
from hip_data_tools.aws.branch import BranchUtil

sampleObject = {
    "eo_click": [
        "https://eo_click_url.com"
    ],
    "eo_install": [
        "https://eo_install_url.com"
    ],
    "eo_open": [
        "https://eo_open_url.com"
    ],
    "eo_reinstall": [
        "https://eo_reinstall_url.com"
    ]
}

csv_content = """"id","name","timestamp","timestamp_iso","origin","last_attributed_touch_type",
"last_attributed_touch_timestamp","last_attributed_touch_timestamp_iso","last_attributed_touch_data_tilde_id",
"last_attributed_touch_data_tilde_campaign","last_attributed_touch_data_tilde_campaign_id",
"last_attributed_touch_data_tilde_channel","last_attributed_touch_data_tilde_feature",
"last_attributed_touch_data_tilde_stage","last_attributed_touch_data_tilde_tags",
"last_attributed_touch_data_tilde_advertising_partner_name","last_attributed_touch_data_tilde_secondary_publisher",
"last_attributed_touch_data_tilde_creative_name","last_attributed_touch_data_tilde_creative_id",
"last_attributed_touch_data_tilde_ad_set_name","last_attributed_touch_data_tilde_ad_set_id",
"last_attributed_touch_data_tilde_ad_name","last_attributed_touch_data_tilde_ad_id",
"last_attributed_touch_data_tilde_branch_ad_format","last_attributed_touch_data_tilde_technology_partner",
"last_attributed_touch_data_tilde_banner_dimensions","last_attributed_touch_data_tilde_placement",
"last_attributed_touch_data_tilde_keyword_id","last_attributed_touch_data_tilde_agency",
"last_attributed_touch_data_tilde_optimization_model","last_attributed_touch_data_tilde_secondary_ad_format",
"last_attributed_touch_data_tilde_journey_name","last_attributed_touch_data_tilde_journey_id",
"last_attributed_touch_data_tilde_view_name","last_attributed_touch_data_tilde_view_id",
"last_attributed_touch_data_plus_current_feature","last_attributed_touch_data_plus_via_features",
"last_attributed_touch_data_dollar_3p","last_attributed_touch_data_plus_web_format",
"last_attributed_touch_data_custom_fields","days_from_last_attributed_touch_to_event",
"hours_from_last_attributed_touch_to_event","minutes_from_last_attributed_touch_to_event",
"seconds_from_last_attributed_touch_to_event","last_cta_view_timestamp","last_cta_view_timestamp_iso",
"last_cta_view_data_tilde_id","last_cta_view_data_tilde_campaign","last_cta_view_data_tilde_campaign_id",
"last_cta_view_data_tilde_channel","last_cta_view_data_tilde_feature","last_cta_view_data_tilde_stage",
"last_cta_view_data_tilde_tags","last_cta_view_data_tilde_advertising_partner_name",
"last_cta_view_data_tilde_secondary_publisher","last_cta_view_data_tilde_creative_name",
"last_cta_view_data_tilde_creative_id","last_cta_view_data_tilde_ad_set_name","last_cta_view_data_tilde_ad_set_id",
"last_cta_view_data_tilde_ad_name","last_cta_view_data_tilde_ad_id","last_cta_view_data_tilde_branch_ad_format",
"last_cta_view_data_tilde_technology_partner","last_cta_view_data_tilde_banner_dimensions",
"last_cta_view_data_tilde_placement","last_cta_view_data_tilde_keyword_id","last_cta_view_data_tilde_agency",
"last_cta_view_data_tilde_optimization_model","last_cta_view_data_tilde_secondary_ad_format",
"last_cta_view_data_plus_via_features","last_cta_view_data_dollar_3p","last_cta_view_data_plus_web_format",
"last_cta_view_data_custom_fields","deep_linked","first_event_for_user","user_data_os","user_data_os_version",
"user_data_model","user_data_browser","user_data_geo_country_code","user_data_app_version","user_data_sdk_version",
"user_data_geo_dma_code","user_data_environment","user_data_platform","user_data_aaid","user_data_idfa",
"user_data_idfv","user_data_android_id","user_data_limit_ad_tracking","user_data_user_agent","user_data_ip",
"user_data_developer_identity","user_data_language","user_data_brand","di_match_click_token",
"event_data_revenue_in_usd","event_data_exchange_rate","event_data_transaction_id","event_data_revenue",
"event_data_currency","event_data_shipping","event_data_tax","event_data_coupon","event_data_affiliation",
"event_data_search_query","event_data_description","custom_data","last_attributed_touch_data_tilde_keyword",
"user_data_cross_platform_id","user_data_past_cross_platform_ids","user_data_prob_cross_platform_ids",
"store_install_begin_timestamp","referrer_click_timestamp","user_data_os_version_android","user_data_geo_city_code",
"user_data_geo_city_en","user_data_http_referrer","hash_version 668316117106030936","VIEW_CART","1560577205605",
"2019-06-15 05:40:05+0000","BRANCH","","","","","","","","","","[]","","","","","","","","","","","","","","","","",
"","","","","","[]","","","","","","","","","","","","","","","","[]","","","","","","","","","","","","","","","",
"","[]","","","","false","false","IOS","12.3.1","iPhone10,2","WebKit","AU","5.5.7","0.27.0","","FULL_APP","IOS_APP",
"","","4D5E18DA-864B-4093-8B55-1586E2FCE0E7","","true","Mozilla/5.0 (iPhone; CPU iPhone OS 12_3_1 like Mac OS X) 
AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148","49.195.200.39","21922425","EN","Apple","","","","","","","",
"","","","","","{""email"":""dom@bostonsecurity.com.au""}","","","[]","[]","","","","2175974","Bexley","",
"UNHASHED 668316802832572675","VIEW_CART","1560577369104","2019-06-15 05:42:49+0000","BRANCH","","","","","","","",
"","","[]","","","","","","","","","","","","","","","","","","","","","","[]","","","","","","","","","","","","",
"","","","[]","","","","","","","","","","","","","","","","","[]","","","","false","true","IOS","12.3.1","iPhone8,
2","WebKit","AU","5.5.3","0.25.6","","FULL_APP","IOS_APP","","","9590B028-F72E-4BF6-87C5-45FF3F16A58C","","true",
"Mozilla/5.0 (iPhone; CPU iPhone OS 12_3_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148",
"144.132.65.182","18171307","EN","Apple","","","","","","","","","","","","","{""email"":""""}", "", "", "[]", "[]", \
              "", "", "", "2147826", "Surrey Hills", "", "UNHASHED"" "

binary_content = b'\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\x00\xed\x9dys\xdb8\x96\xc0\xff\xdfO\xc1\xf2Le\xbb\xab;4\xeeC' \
                 b']\xa9.\xe7\xea8\xed#\x13\xc7\xf1d&S*Z\xa2,\xc6\x92(\x93\x92\x1dgk\xf7\xb3\xef\x03e\xd9:(' \
                 b'\x88\xee\x88\x12\x1d#\xa5nK$\x88\x8b\xc0\x0f\x0f\x0f\x0f\x0f[Qs\xeb\xd7\xad^\xd0\r\xe1\xcf ' \
                 b'\xea\x86\xe9 \xe8\xf6\'\xbf\xd7\xa34\x86\xdfq\x12\x9dE=\xf8\xd2\t\xd2A=\x18\x0c\x92\xe8t8\x08\x9b' \
                 b'\xf5A<l\xb4\xeb\x83\xeb~\xb8\xf8\xe6D\xbcKB\xdc\xa4\x96\x1f\xaa\x19\x0c\x02\x08\xdai\x86\xf5,' \
                 b'\xdbKC5 \xc6 :[\x9c\xed\x9c\xb0E\xa3n\x07\xbd^\xd8)\x12\xb4\x15\x06\x83a\xb2\xb8z&\x82B\x1d\x9c' \
                 b'\x15\n\x08\xe1\xd2"\xe1\x82\xe6e\x98\x0c\xa24\xea\x9d\xd5\xfbA2\xe8\x85I\xfd\xe6m/\xcfL\xd8\x88{' \
                 b'\xcd \xb9\xae\xf7\x87\xa7\x9d(' \
                 b'm\x87I\xa1\x9aI\xa0\xbc\xd1eX8\x9d\xdb\x07\x8a\xd5|\xd0\x84\x9c\r\n\xc7~\x13\xbcp\xdc\xf7\x88\xb7X' \
                 b'\x9c\xa7I\xd0\x83+\x10\xbe\x15\'\xdd`P\xe8\xf5\x86\x8dv/\xee\xc4g\xd7\xe3\xb7V(' \
                 b'%\xd3$\x93z\x13:S/\x8d\xe2^\xa1\x16\xd2\xef\x04\x8d\x10\x1e(' \
                 b'\x94\xaf\xf3\xf0\xfa*N\x8a\x96\x1c\xdar\xafq]$d\xdc\x07\x02D\xdf\xa0\x19\xc4\xbdz7n\x16\xebXw\r' \
                 b'\xf4^\x95\xfb%\x1e&\xbd\xf0\xba\xf0\x9b\x1e\x87/V\xe8\xcb(' \
                 b'\xbc*\x1cu\x16xY\xbc\xfd\xce0\xad7\x86I\x02/\xa9\x18L\xb2\'.\xa3`\x1czICh\xc6\x9dN\x90\xd4\xe9b' \
                 b'>\xdf\xc5z\x15\x9e\x16\xaa\xea\xc60\x1d\xc4\xddz+\n;M\x93|3\xb8N\xeb\xad\x04.-\x18\x01\xe2zx9j' \
                 b'\x85m\xa8\xef\xa2a\xbbQ\x0fn\x14\r=j0ECg\x01\x1aP\x96\xec-\xcd\rb\xf3w&\x07\xaf\xdb\xbb\xb9\x83V' \
                 b'\xde\xdd\xd9\xc1\xca\x16fYT\xd3\x83S^\x90\x99v\x94\x17dj0\xca\x0b09\x08\xe5\xdd_6\xf8\xe4&\xbax' \
                 b'\xd0\xc9-i\xde`c\rh\xaf\xb9\x9c\xc1\xc5\x12li\\\x05\xe2\xb1\xc7\xb1h\xf0\xc8}\x1d\x0b\x07\x8d\xdc' \
                 b'\x98\x17\r\x16y\x81\xe7\x06\x89\xbc@\xf3\x83Cn\x91\xa7\x06\x85\xbc\x10\x8b\x07\x03{' \
                 b'\x83YRI\x0b\xa18\x1dl\x0e\x869\xb1\xccCp:\xd0\x1c\xfc\xc2\xb0_\xefD\xbd\xf3\xd0TM+J\xe0\x89\x8c2' \
                 b'&\x96\xfa0\xcd\xde\x94\xf93z<Ng~\xd6\xa1\x1f\x99w4uy\\3wWN\x93\xf8j6\xae\xb30\xae7\xe2ao\x00\x15' \
                 b'\xd4\x80\'\xa6n\x06\xfd~n\xd4i\xf3<\xf7\xba\x89\xac\xd9\r\xe6#\n{' \
                 b'\x97Q\x12\xf7nZ\xc8\xdduh7\x03SQ\xd3\xa9\x06Y\x0b\xb9\xbb\x105[' \
                 b'\xc1\xec\x85\xcb\xe9Gz\xcd$\x8en\x9a\xd6\xdd\xe5\x0e\xb4\x93\x81y\xef\x83$h\x9c\x03f\xa6\xeef' \
                 b'\xdfLs\x9b\xceS\xd4\x9f\xfa\xd9\x84\x17\xd1\x89\xfb\xf03jB\xd0hp=\x9dD\xd0;\x1b\x8e88Y\xd1\x90' \
                 b'!\xf3^\xa3:\xb4\x01\xe8\x9f\x8dN\xd48\x87\xb1\xe3<4\x156z\xb5Y\xc8\xc4|\x1f\x02uz\x90\x9d\xe6\xf4' \
                 b'\xbd\xf0\xab\xe1\xf4YXO\x82A8}\x0b\xca\xd3K\x83F\xd6\x03\xa2fn\x94\xd3\x17G\xe2A\xd6\xaf&\xae\xa6' \
                 b'\xed\xa8\xdf\x1fU\xcbd\xe4\xc1\xd7\x99\x87\xe3a?\x9e\xc9x\xd0jE\x9d(' \
                 b'\xeb\x833q\x86A\x02%\xbe\x18\x86\xc9Lj\xcd0m$Q\xff\xe6\x91\x9b>`\xee\xdcC\xb2\x9c\xaa\xe6F\x12\xa7' \
                 b'\xe9m\x1b\x9a}\xf9\xfd\xac\xdf\xcd\x06\x99\xee:\xfd$>\xcd\x0f\x03\x99K\xcck\x81A\xae\xd3\xa9\x9f' \
                 b'\x860\xb9\x9d\x1a\xe2\x93\xb0\x15B\x95&\xe3W;q+\xafg\x8e[' \
                 b'\xe8|\xdf\x83\x065\xdf_n\xef\x84\xd3\x1d\xac=\x18\xf4\xeb\xe3\xa4\x8d(\x14\xa4\xed\xdb\x9e\xf8_[' \
                 b'B`\xa94UZ\x13\xc4\t\xc6\x0cC\x98\xe7\xefw\x0e^\xbc\xa9\xbf\xf8\xb0S\xff\xb8\xfb\xea\x04\xae`\xce5' \
                 b'\x82\xdb\x98\x08dB\x10\x84\xf5S\xc4\x9f\x12\xe5!^#\xbc\x86\xc9/\x08\xfe\xdd>\x0c_&?0\x92\xa4\x83' \
                 b'\xdb_7\xe2o:\xfa\xf5\xef\xad\xad\x97\xf1U\xaf\x13\x07M\xef\x05\x8c\x1a\xc3n\x98x;\xfd\xbe\x17\xf7' \
                 b'\xbc\xb7\xf1\xa9\xf7\xce\xf4\x95\xad\xff\xcc\xc4X\xe43Nu\xfcwy2\xbff\x15\x829\x91\x92(' \
                 b'\xc2)\xa2H\xc2\xc5\xfd\xc3\xe7\xbb{' \
                 b'\xaf\xeao\x0f\x8f\xdf\x1f\xbc\xfatd2}\x97\x9f\xff\xd9\xda\xfa\xa5\x19w\x83\xa8\xb7\xb5U\xdb\xda' \
                 b'\x82\x0e\x021\xa5\x8d\x9b$| ' \
                 b'\xa2o@\x9d\x85\xfee\x98tF\xa1\xe0\xb5\xa4\xb5\xcf\xdb\x9f\xb7\x17\x85\xff\xbcM?\xed7\xbb\xc3/\x01' \
                 b'=\xc9\x9e\xfd\xbf\x91\xc0\x01-#\x85\xfak@\x9d\xd4\xb8\x89\xf2\xf6\xe5\xe6\xc6\xeb7\xe2\xae\x1f\x0c' \
                 b'?o\xc3(\x1e\xf5~7r\xea\xb3\xcf\xdbA##\xf8\xe7\xed/\xf1\xe9\xe7m\x81\xa8\xa0\x8a}\xde\x8ez\x83\x10' \
                 b'\x861\xe8NOO\x87 d\x85i\x1a\xa6p\x9fcJ\xb4\x14\xf8\xc9p\xd0\xbd\x95\x18\x9f5:Ad\x86$3\xf6\xf4\xe2A' \
                 b'\xd4\x8a\x1aY\xfe\x9e\x8ce\x8c\x9b\xb9\xc8\xb3\x9c:5\x05\xfa{' \
                 b'\xdc\x0b\xb3n`\xb8\n\xb9o\x05\x9d44\xd7\x1bA/\xeeAd\x9d\xfa\xc2\xea\xaar\xb1\x86I\x04=\xae\x19%ac' \
                 b'\x90\x8d\xa9P\x04\xec\xa3\xff\xfd\x0b-\xf8/\x7fv\x0fM+\xc5\x90,' \
                 b'\xfc\x89\xde\xb5\xa1\xaaM;\x8eO\xa3N\xe8\x1d\x05\xad ' \
                 b'\x89\xe0\xf7\xce\xf1\xe43\xaf\x8f\xf7\xf6\xea\'\xaf\x9e\x8f\x1e\xbf\xf96\xf9\xc9^P\x16\xcd\xb7' \
                 b'\x08D\x9am\xee#\xef\xa7Q\xe4\xbfy/\xde\x1d{' \
                 b'\xa3\xef\xde\xe1\x91\x87q\x1dy\x9d\xe8<\xf4\xf6\x83\x86\xb9\xf0\xcf\x9fMg\xeb\x84\'\xe1\xe9\x9f' \
                 b'\xd1\x00\xde\r\xf3\xb1O\x95\xf7\xd3\x9fo>\xec\xef\xfd:\n\xfbG\xd88\x8f\x7f\xf6>\x8e\xf0\xb4m\xb2' \
                 b'\xef\x8d\xf2\xbc\x8d\xf9\x0e\x95\xe4&\xeb\xa3\xc73\x0e\x11\x1f#_c\x9f\x101\xca\xe4\xab\x03S0\x93' \
                 b'\xd4}\xeb,\xeb\xd3\xff\x9e\x02\r\xc1LJ\xccn\x7f\x1f\x1f\xbc\xd99z\xf3\xea\xe5\x98\x9c\x8ah\x8a\xa9 ' \
                 b'\x92aE,\xe4D\x8ac\x8c\xd4<9Q\x8dcG\xceU\x93\xf3\xf2#\xbdP\x01\xd2d%\xe4\xfc\x8bT\xf9}\x9d\x18,' \
                 b';\x8f\x0b\x98\x96e\xffl\xa4\xab7\x19\x84Ib\xd4\x80\x9e\xb7\xe5`\xf7\xc3\xc1NcA1\xd1B\x12\x0c\xed' \
                 b'\xc2\x02;,\x98\xd0j\x1ev\x94\xd5\x90\xb0\xc2\xee\x96.\xaf\x00\n\x1d\xefClxc\x84\xd5\xac\xf7zP\x9d' \
                 b'\xe6\x1a\x94\xf7\xa6\xf4&\xd4\x1a\xa9x\x9f\xec\xf1F\xd8\x90\x94\xb6Z(' \
                 b'\x10"dAx*\x15\xe2\x8d\xe6\xc3\x83\xe9G\xfe\xfe\xed\xc7\x93\x93\x15\x89\xa1\xb3\xa0\xe2@*n\x01\x15U' \
                 b'\x8a"\x81~7"\xda(\xc1gg\x170\xfd\x81\xa4R\x98b\xc2\x04\xbb\x11f\xf2[' \
                 b'\x17\xe84\xec>\x0b\xcd\xab\x99\x16\xe8`\x9e\x95B\x1e\xea\r\x98W\xc2\x0c\rf\xc2\xcd(' \
                 b'4j\xd9qa\xb3\xe0\x90~\xf7Y\x86\xc1q\xf8vd\xa6t\xd7\xe5A\xfa\xa1\x94\xbd\xd2\xf0\xdf9x\xf9\xfep\xf7' \
                 b'%|S>\xcaF\x80\xa3\xfd\xa7\x07\x9a\xa3\xd7\xa6\xc7\xb6ab\x10\xda\xe0\x7f\xf3x\xd1\x01`/\xea\r\xbf' \
                 b'\xfe\xe6\xed\x8c\xe6\xe6^\x96\xe4o\xde8\xc5i\xecs*}*r\xa1?\xca\xd7\xb6d\xf0<\x90^\xfb\x98Koj\xc0' \
                 b'\xbay\xda@\x15\x98O\xb0\xaf\x98O\xf4\x04\xf5\x8f\x82n:\xcc\x141\xdf\xcb}E\x99\xe2\x99\xf8\x9a\xcf' \
                 b'}B\x18!\x14\xd8N\xa5V6\xeeCP@\xff<\xf7E\x8d\xda\xd5\x03\xb7 ' \
                 b'4\x0440<\xee\xa7a\xa73\xba\t\xb5\x99\xc7\xf8\xe1(' \
                 b'\x88\xf9\r\xdd)\xfb\xfbz\xd8\xe9xG\xc0\xa7\xb0\xe7\x1d\x02\x97;\xc1\xf5w\x82~.?\x06\xeb\xa7\xecTJ' \
                 b'\xc6\x1b\x04\x87$h5\x9b\x01i\x98\x1c\xe6\xa5>\x02\xb9\xe4\x82kI\x85@x\xa4>\xd9\x0c\xc8\x07W\'\xe8' \
                 b'\xe0\x8d\\\x11\xc8\xcb\xc3"\x93JJ\x1b\x16\xa9TB\xea5a1\t\xfb\x9d\xf1\x18\xb0q\xd8\xddH\xba\xc47' \
                 b'\xbdu\x13\x92.\xa9\x13\xbb\xa4\xcbA\xd2\xc5\xdc.\xe9\x82\x18{' \
                 b'\'\xe9\xbe\xc2L\xcdJ\xba\x18x\x07\xd2\xa8\xaf\x95?\xd2Hn\xadX\xd4\x05\xb1\n\x838\xb6\x10y\x94#\xc6' \
                 b'\x89\x90\x18i\xc5-\xc8#HS\x91qm\x1ay\x0c\xd7(' \
                 b'u\xc8\xdb8\xf2\xf0\x977W\xdf>\x0eNK\x92]\x85\x92\xb6I6\xa3\x8c!R\xe2,' \
                 b'\xff~\x19\xd88\xbd\xeeD5#\xc8\xbc\x8b\xbef\xab\x8de\xcbh\xfa7/K\xca\xa3\xa5\x88g\xc0\x00\x9fP\xea' \
                 b'\xc3\xfc\x9dP9\xc1\xaa?\xe2\xf8l=\xf3r\x8a\x14\xe6\x98\x83\xec%mJH\x08\xa15cs\xb0\xa2\xa4\xc6\xb4' \
                 b'\x9b\x97?\xb4y\xf9yo\x7f\xb7y\xf6\xbe\xf2\xe2\x1c\xd7BS\x1b\xa4$\xc7HP7\xcb\xb5}\x1e\x8b\xe0\x87' \
                 b'\xb9/`\xa2K\x95\xcf\xcb\x90\xfb\x00\xa5\x9c\t\xbc\x18\xa5\xca,' \
                 b'\x85\x83\xc4\xa2U\xc6\xf2\xc5*N-x\xd6\xf7\xe7T\x9c\xdc\xa98\x1f\x1cJ\xd37=\xa9\xfa\xabB\xe9,' \
                 b'\x00\r\x02\x91\r\x80J!,\xd7\xa5\xe6\x9b\x9c\xcf\x96@\xfb\xca\x16\xb6\xd2x\x9f\x96\x8c\xb7\xd6"\x14' \
                 b'\xbf\xd8\xfb\xf0t\x8f\xe8rt\x96 \x14c\t21\xf55\x9b\xe0\xf8j\x10n\x95\x86\x81% ' \
                 b'\xe9r)\x85\xe4\xb6\xa9;V\x10Z\xe8y\x84K\x98\xbd\xbb\xa9\xfb\xc6\xa7\xee\xd7\xaf\xaf_\xb6\x0e\x1b' \
                 b'+\x9a\xba\x97\x07<J\t\xc7\x0b\x80\xf7\xfbM\xb2\x1b\xe7\xcbc\x11\x1f\x91\xf0%L\xc79H\x91j\x02;\xab' \
                 b'\x13\x1f9\xd6|\xb1\xda\x90H-$c\x9aq!\xac\xec\xd1\x84)N\xe6\xd9\xa3j\x8c9\xf6l\x9c=\x9dC\xc2?\xa5' \
                 b'\xed\x92\xd4\x86\x02I\xac\x17\x11\x03\xc2\xd4\xd3\xe02l>K\x87\x8d\x06\\{' \
                 b'\xd2\x1a\\?\xc3O\x86\xcf\xc8\x13s\xcf\xd8\xe8\x8cb(' \
                 b'\x0fi+\xca\xe0\xdf\x8cq\xf4\xd3\x14\xe4\xad\xa7\xacb ' \
                 b't\xa6B\xdf\x0b\xc2%B\x98\x92JP\x98Hs\xc6\xac*I\xcd\x18\x959\xf3h]C\x0e\x84\x0e\x84\x0e\x84\x0e\x84' \
                 b'\x0f\x19\x84J!\xc6\x19\xd2Z`\xaa\xa9\x05\x84\x08\x98\x89rlg\xb0\xae\xf1\xef\xdaZS&\xf3f\xad\xc4' \
                 b'+\x8f\xb3\xddH%{\x17q\x05\xed\xc2g*\xa84\xa2\xad<\x8f\x0ed\x8f\x03d\xdaLk\x05\xbcxbF\\\xdb\x1eA' \
                 b'"\xa4\x9e\x97\xe8\x08|\xec+#n\xa7\xcb_ ' \
                 b'Z\xeb\x9fq\xeb\xcb\xd7\xf3*\xed\x11|p\xbb\xff\xdc\xbe>G\xbb\x19\xdaIE\x85\xa4T\x10F\xb4m\xab\x0b' \
                 b'\x92\x8c\x90L\xb0\x9b\x13\xdb\x90\x13\xdb,' \
                 b'\x90\xcb\x04\x87h\xd0\t\'\x83zO\xbd\x17\x99\xff\x02o\xd0\x0e\xbd\xab\xe0\xda\xbb\x8e\x87\xdeh}\xef' \
                 b'\xfeh$\xfb_\xf5A\xb8\xbb"a\xef>\x12\xd1\xa4\xdb\x02\x13\xeb\xce0\x85Bt\xa2\xe0\xbfS\xefo\xd8K\xa3' \
                 b'\x01\x940\xf6\xda@\x12/\xb8)\x9f\xef\xbd\x8ezM\xaf\x13\x03\xf8\xbc\x8b!\x84nEa3\xbb\x19\xa6\xfd0' \
                 b'\x86v\xefE=S!\x89\x17@I<\x98Sz\xd4k\xc1[\x83\xe0\xf1 ' \
                 b'\xab\xbd\xa9\x18!\x89f\xb0\xc2\x95\xde\xfb\xd4@\xd45\x0b\xb4\xcb\xe3\xcc\xc2\x01\x8c[' \
                 b'0\x95nC\xb1\x9aPw\xad`\xd8\x19\xf8_\xfagw\re,' \
                 b'a^\x85\xa7\xa6\xf2\x9c\x84\xf9#2Wid\x1a\x14\xc1\x14\xc8kc\xae\xd6\x12d\xcc9\xe6\x12Z\xc3\xd2I\x98n' \
                 b'/u\x95\xe6\xccn/\xb5\x83]\x1e\xect6bRh\x18\x0c1\x0b\xec0\x10\x11\xd1y\x01\x93\x08\x07\xbb\xcaH\x9a' \
                 b'\xeap\x7f\xb7\xd3\x8aW4\t/\xce\xbaG%i\xde\x9f\xa4N\x08u\\\xbe\xf7^\x1a\xa6\x98\x12\x94\xc1\x9c\x06' \
                 b'\xdb\r\xc01L\xfes\xf6:\xd3\xc2{' \
                 b'\x9d\x9d\x01xu\x84\xdc\xb7\xafD\xc2\xba\xc7e\xf9\xb8`\x18/\xb2\x89\xfe\x1eC\xe8\x85\x9e\xca\xa6w' \
                 b'\xbb\x98\xc5\xe8f8\x80\xc7\xd3\xfa\xc4\xb0X\xc6V\x9f*\x16\xb4\xd2\xe2v\xae\xf7\x8a\x1d\xe8\r\xc6{' \
                 b'\xc5\x9d\x8b\x87\x92\xddW\xec\xec\x1f\x1d\x1f\xfc\xe1\x8d\x93\xf6\x9e\x0f\xa3Ns\xfb=\x16\x07\'\x85' \
                 b'\xcd\xc3o2\xfb|\xe41v[\xfbdl1.\xa4\xb1\x18\xa7Z\xf8j\xf1.JDa\xf0\xf0\x05\xf21#\x13\xdc_\x9d\x97' \
                 b'\x8b\xd1\x96o\x0b\xf9\x95\xe0@/%\x88\xa0V\xdbM\x89\x88\xd29v\xe3|\x99\xca\xd7\x91\xbf\x82\xe4\xd7' \
                 b'\x17g_\x8f\x18*\x89\xfc\x0c\x1a\x9dm\xef#1\x16\xc3t\xf3{' \
                 b'\x1fKq\xe3\xf1@\xca^\xe9\xf1\xe1\xb1\x18\xee\xdf\xec\x17b\xda\xc7z\x92\xff\xab\x92\xfb3\x1fG\xd2b' \
                 b'\xb0\x8a8&\x0c\x11\xa1\x98\xb4\xeac$\x93 ' \
                 b'\xe3\xe4\xd1\x9f\xd9\xf51\x8e\xfe\x15\xa4\xffE\xfb\xa2\x15uX\xe5\xf7\xd0W\xd6%\x92\x83g\x15\xe0' \
                 b'\xb9ioI\x88a)0\xe6B*\xdb\xca\x9d\xd9U\x9f\xb7rGu\x8d9oI\x9b7\x8f\r\xbe\x9d\x1e\xbcF\xe7\x1b\xb0' \
                 b'\xf6/\x8f\x9c\x05R\xad\n\xa7\x9cn\xf7\xfb0\xb5L\xb7K\x99\xa4L#Na\xaeo\xf3cI\x90\x12$\xe7\x98\x0b' \
                 b'\x86\x97\x99\xb0:L\xad\xc5\xa9\x1b\xdfi\x1f\xf4Js\xea\x06\xa2\x96X;\xa6\n\xa4\xbaqL\xe5\xea*\xff' \
                 b'\xd0\x94oHW\x99%\xbd\x01]\xe5x\xb2\n\x81@,\x9a\x00\xd9\xea\x94\x95\x04s\xa9\xf5b\x89\x0bS,' \
                 b'\x89\xf1\xff\x874\xb7\xbab\xe7\x92`\x9c\xb3LE\x96m+r\xd3\xd5\nNW\x9d\x9f"\xe7\xa7\xa8"C\x80\xf3S' \
                 b'\xb4\x14\xe1\xcb,\r \x04\xc5X1\xa1\x85\x15\xe1Z\xe8<_!\xb4\x86\x9d\xab\xb9\x07\x87\xf0+:|\xfb\xbe' \
                 b'\xf5\xa1\xb4\xf5&M\x94u\xcdE\x0b\xa4\xc8\x8f\x81\xf0\xca\x16\xf6\x81 ' \
                 b'\x9c\xdf\x9d\x96\x81\xb2\x1eQ6\xcc\xf9\xedY\x19\x90^I<\xe7>A\x10\x841\x1f\x8bI%\xc3*\x8f\xcb\xa0' \
                 b'\x1c!\xb5\x10\xecDk\xa99\x85i2\xf0\xdb\x06vmp\x94\xe3\x8eY\xbb\xe32\xaa\xa0fp\xdaP\xa7\r\xfd\x91' \
                 b'\xb5\xa1\x8a \x9aI\xa1\xda\xea\xea\x98`\xa1t\xce\xd1\x95\x8c\xd4\x98r\x98\xda8\xa6\xda(' \
                 b'\n.\x86\xdfJ\xd3\x86b\xbch\xef\xd3\xd8\xbbe)\xea\xd0\xe5\xc9V\x05T\xd0\x8d7\xb8\xc0\x8cW\xb3\xc4' \
                 b'\x8c\x96\xdb\xe7\x10\x88\x07Q_Lj<W\xe8XSa)\x17\xc2\n\x9b=x\x04\x19\xfb\x1be\x95\xa9\xb8\xa2$O' \
                 b'\xdfIk\xa8\xe0\n\xb3\x9b,Wg\xb2\x1c\xe1O\x17\xfd\xe1\xcb\xb2&\xcbZ\xe8E\x9e{' \
                 b'3\xa3\x1a\xa2\x80\xf0\xeb2P,' \
                 b'{\xb2\\\xd5\xc2Vz\xb2\xecd\xd1\xf5\xb8\x0beR+\xc6\x84\xe1\xbc\xd5\xfaR1\x98^\xe7\x18\x10\xc9\x1a)x' \
                 b'\x82\x91\x93EK\xe4\xb5\xc0\xc1\x85>:-I\x16\xad,\xc2\x1e\x15\xaf\x1d\x94\x1f\x0b\x94\x15\xc7R(\x01B ' \
                 b'\xb5\xfbp\xa6R\xcbys)\xaaj\xbc\xa0I\xbc\x83\xb2\xf3\xe1\\\x16H\x9d\x0fg\x07\xc2\xef\x02!\x8c\xb3' \
                 b'\x0c\t*\xa1\xf3S\x8d- D\x0c@\xa9\xe6A\x88i\x8d\xdb\x95\x0f\x8f\xdc\x19\xe0\xbdp\x16\xb6\x1b\'\xad' \
                 b'\xf3\xcb\r\xf8\xa3\xb2\xd0\x02\xdf\xd1"\x8b!\xd7\xa7h\x15|<\x97R\x06\x07\xc2\xc7\x01BI$C\x8c)\xac9' \
                 b'\xb3\x19\xd0\xc3\x88\xa90\x9d_2\xc2b\xd9\x92\xd1#\x07\xa1\xf3\x8a\xfac\xf8\xaar^Q\x1dsW\xc3\\\x8d' \
                 b'\xb4V\x08IB(\x0c\xcb\x16\xe6b\xa6\xb9\xcesK\x82k\x94\xbb\x95\xaf\x87\xb6\xf2E\x13\xd1{' \
                 b'y\xb0W\x9a\xa5\xbf\xe0\xb6\xed\xe4L)\xad\xa4\xfa14\xa9\x95-l\xa5W\xbe\xa6-\xfd\xb3\xddV"sJ\xb5\x06' \
                 b'\x8b\xffqj\xa5\x98\x88\x1a\x17#\x8a\xf8\xca\xe7\x134_\xe5\xce-\x90\x913R\xe7\xf3\x9c0\x8e \x8b ' \
                 b'$sj\x93\xa1\xb1b\x84\xc8\x1cG#\xb2F\x9cu\xe8\xe6\xd5\x10\xc9\x907?uK[\xea\x12L\xf1\xb5[' \
                 b'\x87\x16Hu\xe3\\z$>=\xb8\xf2\xb1\xa4\xbe\x86\xc8(' \
                 b'\x9d\x00\xd5\xca\xc4N\x82\x14\xb5x\xc3\xa30\x81\x97\x88s\x89F\xfe\x98,' \
                 b'\xd6\xa1\x92\xe2y#vc\x1d\xea\x16\x7f6\x8f)y\x1d\xed\xca\xee&\xacC\xcb\xc3T\x81T\xab\x83)g\x1b\xfa' \
                 b'\xdd\xa8\xb2\xdb\x86*\x01S\xdf\xcc1\x1b\xd7\xd4zV\x13\xa5Z\xe3\x9c\xe5\x19R\xc3v\xe3\xa1G\xae' \
                 b'\x95tGl\xba#6\xb7\x9c\xaao\x05 [' \
                 b'\xa2\xea\xe3\x84\x9b#\xd31\xcc\xfc\xac\x067TQ\xc6\xf9\x1c\xc8Hq7jN\xd5W\x1dU\x9f3r\xff\xf1\x8d' \
                 b'&+\xad\xeasx_\xcf\xd1"\x14(c\x0e\x17\x91\x0c[' \
                 b'Wr\xb8\xe4\x94\xe6\xd8S\x92\x1aw+9\x0e\xef\x0f\x83x\x0e\xef\x0e\xef\x8f\t\xefJ!\xcd\x18\xe1\x9c' \
                 b'\x01v\xac\xc6Q\nQI\xe7\xfd9\x11\xb4l\x8b\xea#WC8\xe3(' \
                 b'g\x1c\xe5\x8c\xa3\x1cs\'5&\x8a#\x81a\xd4W\x94[' \
                 b'}\xe81\x01A\xe7\rR)\xae!\xe4D\xea\x87&R\xa7W\x83p\xbf\xf1\xb6<\xe3(' \
                 b'a;\xb7\x88)\x8d\x05\xdd\xc0Y\x1b%\x19GU\xb3\xb0\x0fA\xa4\xfe\xd1\x8d\x10\xcc\xa1|\x9c\xfb\x84J\x7f' \
                 b'\xa4\x91^5\xdf\x95\xf1\xc7/-n\xae\x01\xdfRk\x85\x11\xb3z\xec\xc7\xc6\xdd\x1e\xc91\x96"5\xec4\xe2' \
                 b'\x0f\x8e\xefNe\xe2T&U\xe0\xbb\x13\xdf\xbf\x0f\xef\xcb5\xe2\x92\x08\xc2\x04\x06v[' \
                 b'\x17<\xb9\xe2\x14\xcf/x\x1a\xaf^N#\xfe\xe0\xf0\xfe\xf6$\xd8\xfd\x1a\x1f\x95\x82w\xae4\x11\xd2\xe2' \
                 b'\xd8\x1f\x8a\xae \xcc\x0f\xe1\x02\xbb\xc2\x85}\x08x\xff\xd1\xc5w\x88\xc2l\x85\x80q\x80\xb0\xc9\xc3' \
                 b'\rVh\x98G(\xd5\x8b\xf1\xae\x90\xd6\x94\x81l\x8e\xb0Uz\x17Js\x99\xe3\xd5\x8b\xd5XA\xaf^\x0e\xef\xd5' \
                 b'\xc1{\xfb\xcf\xa3/\x1f\xf9\xbf\x1e\xc5!5\xeb=Q\xfb\xa1\x94\xbd\xd2\xf0wG\xd8\xdc\x03\xf0K<\x84\t' \
                 b'\xa3xa\x1c\xc4s\xeb\x92\'V\n\xf3\xbc\xbd\xc9\xaa\x86\xb0\xdb$\xb2q\x9b\xed\x94\x86\xa7\xe8,,' \
                 b'k\x93\x88\xa6b\x11\xb5\xcace\x81T+\x86\xa2\xd1\xae\xd7\xf5\x1c\xa6\xa8g\x0eR\x14\xb7\x07)\xbe{' \
                 b'\xf7\x1e\x9bc\r\x05F>\xc2x\x8dG*\x12\xe2\x03\xf0\x08\xdf\xc8\xbe\\\xca4dQI\xac\xb1\xcer\xb0\x80eH' \
                 b'\x81LM\xf4\xac.\x02\xd7\x98Z&\xac.1\xdfX*\xe5y\xdeO0\xf3\xf8y5\x06\x1c\x85S\xab\x94h)\xa3\xe3\xc1' \
                 b'\xd9\xde?\x8e\xcb\xd9\\\xc2\x99^\x88\x8cL\xbcB\xd0L\xd6\xeb( \xd7\x07\xd7\xcc\xcb(' \
                 b'\x0f\xa1\x0f\xb8>*-\x82\xe6\xeb\x1f\x96\xcb\xa1\x9bU<\xbcH\xa2\xc3\xa3m\x89\x0c\xcd9U\xbe\xe4\x8b' \
                 b'\xd4\x0f\xbc\n\xdae\xca\xe1?d\x8eX\x94\xcavf\x04\x10]\t\xa2f\xb70\x03\xd1u\x8d\xd9\x0fXtDwDwDwDwD_' \
                 b'\x0b\xd1\t\xa6\xc0i\xb3l\xc8\x14\xb7\xec\xa01\xc6"\xc6pi\x86\xe8\xa8\xc6Y\x8d\xd9\xd7\x0b\xefO' \
                 b'\xf4w\xef\xca\xa6\xf8]\n\x95"\xf7\xfb\xe7\x91\x0e\xc3\x7f\xfd\xc3\x91\xdb\x91\xdb\x91\xdb\x91' \
                 b'\xdbNn\xf8\x9f\xc0XJD\xb0\xc5\xd2\x031\xcd\x19\x9b;\x13\x17\xc8\xcd\x01\xde\x8e\xdc\x8e\xdc\x8e' \
                 b'\xdc\x8e\xdc\x8e\xdck$7A\x1c\x13\x8e1\x08\xdd6\x7f\x95\x88#.\x15\x9e\xdd\xd6\x08\xe4\x965jw\x04' \
                 b'\xe7\xc8\xed\xc8\xed\xc8\xed\xc8\xed\xc8\xbdZrc*$\xfc\xa3\xd0\x8cm\xe7\xb7!\xa64S<W[' \
                 b'\xe2dnGnGnGnG\xee5\xcb\xdc\x8af\xb6\x9e\x8a\x11\xcb\x81s ' \
                 b's\x0b\xce\xc9\xac-J&s;=\xb7#\xb7#\xb7#\xb7#\xf7\x9a\xc8\xfd\xff\x9d\x97\x0b\x91\xf7\x10\x01\x00 '


class TestBranchUtil(TestCase):
    @classmethod
    def setUpClass(cls):
        start_date = "2020-01-10"
        os.environ['BRANCH_KEY'] = 'test_key'
        os.environ['BRANCH_SECRET'] = 'test_secret'
        cls.branch = BranchUtil(start_date)

    @requests_mock.Mocker()
    def test_fetch_branch_data_url(self, m):
        m.post(self.branch.BRANCH_DATA_URL, json=sampleObject)
        actual = self.branch.fetch_branch_data_url()
        self.assertEquals(actual, sampleObject)

    @requests_mock.Mocker()
    def test_is_downloadable(self, m):
        url = 'https://someurl.com'
        m.head(url,
               headers={'x-amz-id-2': 'EqI420XrE8KUI79u18DrW75CXHFJILxqLLgvUg07ClCPOL7eaVGtgb8+VUFEml+S8KRvdYdOkik=',
                        'Server': 'AmazonS3', 'Transfer-Encoding': 'chunked', 'x-amz-request-id': 'BC80902B47AD5E8C',
                        'Date': 'Thu, 20 Jun 2019 05:58:04 GMT', 'Content-Type': 'application/xml'})
        actual = self.branch.is_downloadables(url)
        self.assertEquals(actual, True)

    def test_write_to_file(self):
        tmp_file_path = "~/tmp/testfile.txt"
        content = "Message to write on file to be written"
        self.branch.write_to_file(tmp_file_path, content)
        self.assertEquals(os.path.isfile(tmp_file_path), True)

    def test_write_to_gzip_file(self):
        tmp_file_path = "~/tmp/testzipfile.csv.gz"
        self.branch.write_to_gzip_file(tmp_file_path, csv_content)
        self.assertEquals(os.path.isfile(tmp_file_path), True)

        with gzip.open(tmp_file_path, mode="rt") as f:
            data = [row for row in csv.reader(f.read().splitlines())]
            actual_first_field_name = data[0][1]
            expected_first_field_name = 'name'

        self.assertEquals(actual_first_field_name, expected_first_field_name)

    @requests_mock.Mocker()
    def test_fetch_csv_data(self, m):
        tmp_file_name = 'test_file.csv.gz'
        tmp_file_path = "~/tmp/branchtestzipfile"
        url = 'https://someurl.com'
        m.get(url=url, content=binary_content)
        m.head(url,
               headers={'x-amz-id-2': 'EqI420XrE8KUI79u18DrW75CXHFJILxqLLgvUg07ClCPOL7eaVGtgb8+VUFEml+S8KRvdYdOkik=',
                        'Server': 'AmazonS3', 'Transfer-Encoding': 'chunked', 'x-amz-request-id': 'BC80902B47AD5E8C',
                        'Date': 'Thu, 20 Jun 2019 05:58:04 GMT', 'Content-Type': 'application/xml'})
        self.branch.fetch_csv_data(url, tmp_file_path, filename=tmp_file_name)
        the_file_path = tmp_file_path + '/' + tmp_file_name
        self.assertEquals(os.path.isfile(the_file_path), True)

        with gzip.open(the_file_path, mode="rt") as f:
            data = [row for row in csv.reader(f.read().splitlines())]
            actual_first_field_name = data[0][0]
        expected_first_field_name = 'id'

        self.assertEquals(actual_first_field_name, expected_first_field_name)

    def test_decompress(self):
        decompressed_data = self.branch.decompress(binary_content)
        actual_first_field_name = decompressed_data.split(',')[0]
        expected_first_field_name = '"id"'

        self.assertEquals(actual_first_field_name, expected_first_field_name)
